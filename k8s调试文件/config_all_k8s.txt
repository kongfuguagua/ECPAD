#修改root并设置su密码
sudo passwd root
sudo echo " cgroup_enable=memory cgroup_memory=1" >> /boot/cmdline.txt
echo "root修改完成"
进入su加密钥
curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -
sudo reboot

#!/bin/bash
source_replaced(){
local filename="$1"
local content="$2"
# 检查文件是否已存在
if [ -f "$filename" ]; then
    echo "文件 '$filename' 已存在"
    mkdir -p /tmp/source_replaced
    sudo mv $filename /tmp/source_replaced
fi
sudo echo -e "$content" > "$filename"
echo "文件已成功创建并写入多行内容 '$filename'"
}
#换源
source_replaced /etc/apt/sources.list "deb https://mirrors.tuna.tsinghua.edu.cn/debian bullseye main contrib non-free\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian bullseye-updates main contrib non-free"
source_replaced /etc/apt/sources.list.d/raspi.list "deb https://mirrors.tuna.tsinghua.edu.cn/raspberrypi bullseye main"
sudo touch /etc/apt/sources.list.d/kubernetes.list
sudo chmod 777 /etc/apt/sources.list.d/kubernetes.list
source_replaced /etc/apt/sources.list.d/kubernetes.list "deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main"
sudo apt-get update
echo "换源成功"

#安装cri-containerd依赖和基础配置
sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    apt-transport-https

sudo echo -e "overlay\nbr_netfilter" > "/etc/modules-load.d/k8s.conf"
sudo modprobe overlay&&sudo modprobe br_netfilter
sudo echo -e "net.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1" > "/etc/sysctl.d/k8s.conf"
sudo sysctl --system

sudo mkdir -p /etc/kubernets
cd /etc/kubernets
wget https://github.com/containerd/containerd/releases/download/v1.6.24/cri-containerd-1.6.24-linux-arm64.tar.gz
sudo tar -zxf cri-containerd-1.6.24-linux-arm64.tar.gz
sudo cp ./etc/crictl.yaml /etc/
sudo cp ./etc/systemd/system/containerd.service /etc/systemd/system/
sudo cp ./usr/local/bin/. /usr/local/bin/ -a
sudo cp ./usr/local/sbin/. /usr/local/sbin/ -a

sudo mkdir -p /etc/containerd
cd /etc/containerd
sudo touch /etc/containerd/config.toml
sudo chmod 777 /etc/containerd/config.toml
containerd config default > /etc/containerd/config.toml
sed -i -e 's/"registry.k8s.io\/pause:3.6"/"registry.cn\-hangzhou.aliyuncs.com\/google_containers\/pause:3.9"/g' -e 's/SystemdCgroup\ =\ false/SystemdCgroup\ =\ true/g' /etc/containerd/config.toml
# 启动，并设置为开机启动
sudo systemctl daemon-reload
sudo systemctl enable containerd
sudo systemctl start containerd
echo "cri-containerd启动成功"

sudo swapoff -a
sudo apt install -y kubelet=1.28.2-00 kubectl=1.28.2-00 kubeadm=1.28.2-00
echo "k8s下载完成"
sudo mkdir -p /etc/sysconfig/
sudo touch /etc/sysconfig/kubelet
sudo echo -e "KUBELET_EXTRA_ARGS="--cgroup-driver=systemd"" > "/etc/sysconfig/kubelet"
sudo systemctl enable kubelet --now
cd $HOME
sudo touch kubeadm-config.yaml
sudo chmod 777 kubeadm-config.yaml
kubeadm config print init-defaults > kubeadm-config.yaml
sed -i -e 's/1.2.3.4/0.0.0.0/g' -e 's/registry.k8s.io/registry.cn\-hangzhou.aliyuncs.com\/google_containers/g' -e 's/1.28.0/1.28.2/g' -e '35a\ \ podSubnet: 10.244.0.0\/16' kubeadm-config.yaml
sudo echo -e "---\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io/v1beta1\ncgroupDriver: systemd" >>kubeadm-config.yaml
echo "k8s安装完成"

 






